library(geometry)

### FRic for each elevation plot for entire data set.
### pca only includes 1st three axes.
hull.matrix.all=matrix(data=NA, nrow=16,ncol=1)
for(i in 1:16){
q.hull=convhulln(pca[names(abund.cdm[i,abund.cdm[i,]>0]),], options="FA")
q.hull.vol=q.hull$vol
hull.matrix.all[i,1]=q.hull.vol
}

# Correlation plot between functional richness and elevation
par(mfrow=c(3,1))
plot(fric.all$All~elevation, xlab="Elevation (m)", ylab="Functional Richness", pch=19)
abline(lm(fric.all$All~elevation))
plot(fric.all$Narrow~elevation, xlab="Elevation (m)", ylab="Narrow-Ranging Functional Richness", pch=19)
abline(lm(fric.all$Narrow~elevation))
plot(fric.all$Wide~elevation, xlab="Elevation (m)", ylab="Wide-Ranging Functional Richness", pch=19)
abline(lm(fric.all$Wide~elevation))

### FRic for each elevation plot excluding wide ranging species
### pca only includes 1st three axes of narrow ranging species

names=as.factor(colnames(narrow.cdm))
narrow.pca=subset(pca, rownames(pca)%in%names)
narrow.pca=narrow.pca[,1:3]

hull.matrix.narrow=matrix(data=NA, nrow=16,ncol=1)
for(i in 1:16){
q.hull=convhulln(narrow.pca[names(narrow.cdm[i,narrow.cdm[i,]>0]),], options="FA")
q.hull.vol=q.hull$vol
hull.matrix.narrow[i,1]=q.hull.vol
}

### FRic for each elevation plot excluding narrow ranging species
### pca only includes 1st three axes of wide ranging species

names.2=as.factor(colnames(wide.cdm))
wide.pca=subset(pca, rownames(pca)%in%names.2)
wide.pca=wide.pca[,1:3]

hull.matrix.wide=matrix(data=NA, nrow=16,ncol=1)
for(i in 1:16){
q.hull=convhulln(wide.pca[names(wide.cdm[i,wide.cdm[i,]>0]),], options="FA")
q.hull.vol=q.hull$vol
hull.matrix.wide[i,1]=q.hull.vol
}

# Plot of functional volume of wide ranging vs. narrow ranging species in each plot

fric.all=read.csv("FRic.all.csv", header=T, row.names=1)
fric.2=fric.all[,2:3]
fric.3=t(fric.2)
barplot(as.matrix(fric.3),beside=TRUE, legend=c("Narrow", "Wide"),
args.legend=list(x="topright"), xlab="Elevation (m)",
ylab="Functional Volume", las=2)

# correlation between species abundance and elevation
abund.cdm=read.csv("abund.cdm.csv", header=T, row.names=1)
total.abund=as.numeric(rowSums(abund.cdm))
cor.test(elevation, total.abund)

plot(total.abund~elevation, xlab="Elevation (m)", ylab="Species Abundance", pch=19)
abline(lm(total.abund~elevation))

# percentage of abundance made up of wide ranging species
rowSums(wide.cdm)/rowSums(abund.cdm)
rowSums(wide.pa.cdm)/rowSums(pa.cdm)

# correlation between abundance made of wide ranging species and elevation
wide.abundance=as.numeric(rowSums(wide.cdm))
cor.test(elevation, wide.abundance)

plot(wide.abundance~elevation, xlab="Elevation (m)", ylab="Wide-Ranging Species Abundance", pch=19)
abline(lm(wide.abundance~elevation))

# correlation between abundance of narrow ranging species and elevation
narrow.abundance=as.numeric(rowSums(narrow.cdm))
cor.test(elevation, narrow.abundance)

plot(narrow.abundance~elevation, xlab="Elevation (m)", ylab="Narrow-Ranging Species Abundance", pch=19)
abline(lm(narrow.abundance~elevation))

# correlation test between species richness of each quantile and overall species richness
cor.test(rowSums(pa.cdm), rowSums(q1.pa.cdm))
cor.test(rowSums(pa.cdm), rowSums(q2.pa.cdm))
cor.test(rowSums(pa.cdm), rowSums(q3.pa.cdm))
cor.test(rowSums(pa.cdm), rowSums(q4.pa.cdm))
cor.test(rowSums(pa.cdm), rowSums(q5.pa.cdm))

# correlation test between the percentage of abundance of wide ranging species and elevation
rowSums(wide.cdm)/rowSums(abund.cdm)
wide.per.abund=as.numeric(rowSums(wide.cdm)/rowSums(abund.cdm))
plot(elevation, wide.per.abund)
cor.test(wide.per.abund, elevation)

# correlation test between the percentage of richness of wide ranging species and elevaiton
rowSums(wide.pa.cdm)/rowSums(pa.cdm)
wide.rich=as.numeric(rowSums(wide.pa.cdm)/rowSums(pa.cdm))
cor.test(wide.rich, elevation)

# to get average range size per plot
plot.250=subset(sonadora, sonadora$plot==250)
names.250=droplevels(plot.250$stemSpeciesCode)
range.250=subset(all.data, all.data$SpeciesCode%in%names.250)

# Correlation between species richness and elevation
pa.cdm=read.csv("pa.cdm.csv", header=T, row.names=1)
total.rich=as.numeric(rowSums(pa.cdm))
cor.test(elevation, total.rich)

plot(total.abund~elevation, xlab="Elevation (m)", ylab="Species Abundance", pch=19)
abline(lm(total.abund~elevation))


# Plots of correations
par(mfrow=c(2,2))
plot(total.rich~elevation, xlab="Elevation (m)", ylab="Species Richness", pch=19)
abline(lm(total.rich~elevation))
plot(total.abund~elevation, xlab="Elevation (m)", ylab="Species Abundance", pch=19)
abline(lm(total.abund~elevation))
plot(narrow.abundance~elevation, xlab="Elevation (m)", ylab="Narrow-Ranging Species Abundance", pch=19)
abline(lm(narrow.abundance~elevation))
plot(wide.abundance~elevation, xlab="Elevation (m)", ylab="Wide-Ranging Species Abundance", pch=19)
abline(lm(wide.abundance~elevation))

# Correlation between range size and abundance

range.abund=read.csv("range.abund.csv", header=T, row.names=1)
cor.test(range.abund$range, range.abund$abundance)
r=0.25 p=0.11

# Correlation between range size and elevation of individuals

cor.test(sonadora$plotElevation, sonadora$Range)
r=0.10 p= <0.001

# Mean range size of individuals in each plot

250 = 680.3659
300 = 785.5859
350 = 872.6992
400 = 793.0847
450 = 826.3609
500 = 851.1042
550 = 734.6341
600 = 801.7416
650 = 724.5047
700 = 820.3686
750 = 861.2159
800 = 853.6513
850 = 725.1356
900 = 845.0215
950 = 1082.581
1000 = 824.6928

cor.test(aver.range, elevation)
r=-0.002, p=0.99



